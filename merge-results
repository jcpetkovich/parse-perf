#!/usr/bin/perl -w
# merge-results --- Merge datamill results.
# Author: Jean-Christophe Petkovich <jcpetkovich@gmail.com>
# Created: 29 Apr 2013
# Version: 0.01

use v5.12;
use warnings;
use strict;
use Text::CSV;
use Getopt::Long qw( :config auto_help );
use Carp;
use Archive::Any;
use File::Spec::Functions qw( catfile rootdir );
use File::Find::Rule;
use Try::Tiny;
use Path::Class;
use List::MoreUtils qw(zip);
use autodie;
use Parse::Perf;
use Data::Dumper;

GetOptions();

our $directory = '.';

$directory = shift @ARGV if @ARGV > 0;

our $rule = File::Find::Rule->new;

our $index_header = '';

sub prepare_job {
    my ($job_tar_ball) = @_;

    my $job_dir = $job_tar_ball =~ s/\.tar\.gz$//r;
    say STDERR $job_tar_ball;
    try {
        mkdir $job_dir;
    };

    my $archive = Archive::Any->new($job_tar_ball);
    $archive->extract($job_dir);

    my @logs = $rule->new->file()->name("*.txt")->in($job_dir);

    for my $file (@logs) {
        my $output = $file =~ s/\.txt/\.csv/r;
        parse_and_dump $file, $output;
    }
}

for my $tarfile ( $rule->new->file()->name("*.tar.gz")->in($directory) ) {
    $tarfile = catfile( $directory, $tarfile );
    prepare_job($tarfile);
}

my ($index) = $rule->new->file()->name("*_results_index.csv")->in($directory);
my $fh = IO::File->new( $index, "r" );
my $csv = Text::CSV->new( { binary => 1, auto_diag => 1 } );

# Assuming perf metrics come last in the header.
my $header = $csv->getline($fh);
$header = [ grep { not /perf/ } @$header ];

$csv->print(\*STDOUT, [ @$header, 'name', 'data', 'extra', 'percentage' ]);
print "\n";
while ( my $row = $csv->getline($fh) ) {

    # Splice the row by the length of the header we produced
    splice @$row, scalar @$header;

    my $job_id = $row->[1];
    my $results_dir = $job_id . "_results";

    my @csvs = $rule->new->file()->name("*.csv")->in($results_dir);
    
    for my $csv_file (@csvs) {
        say STDERR "In file: $csv_file";
        my $csvfh = IO::File->new($csv_file);
        my $results_header = $csv->getline($csvfh);
        while (my $measurement = $csv->getline($csvfh)) {
            $csv->print(\*STDOUT, [ @$row, @$measurement ]);
            print "\n";
        }
    }
}

__END__

=head1 NAME

merge-results - Describe the usage of script briefly

=head1 SYNOPSIS

merge-results [options] args

      -opt --long      Option description

=head1 DESCRIPTION

Stub documentation for merge-results, 

=head1 AUTHOR

Jean-Christophe Petkovich, E<lt>jcpetkovich@gmail.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2013 by Jean-Christophe Petkovich

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.2 or,
at your option, any later version of Perl 5 you may have available.

=head1 BUGS

None reported... yet.

=cut
